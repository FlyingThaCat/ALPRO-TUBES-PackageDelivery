# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main", "john-dev" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.3'

    - name: Build
      run: go build .

    - name: Test
      run: go test -v ./...

    - name: artifact
      uses: actions/upload-artifact@v4
      with:
        name: PackageDelivery-linux-amd64
        path: ./PackageDelivery
  
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.3'

    - name: Build
      run: go build .

    - name: Test
      run: go test -v ./...

    - name: artifact
      uses: actions/upload-artifact@v4
      with:
        name: PackageDelivery-windows-amd64
        path: PackageDelivery.exe

  build-mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.3'

    - name: Build Intel Variant
      run: GOOS=darwin GOARCH=amd64 go build . -o PackageDeliveryIntel main.go
    
    - name: Build ARM Variant
      run: GOOS=darwin GOARCH=arm64 go build -o PackageDeliveryARM main.go    
      
    - name: Test
      run: go test -v ./...

    - name: artifact
      uses: actions/upload-artifact@v4
      with:
        name: PackageDelivery-mac
        path: |
          PackageDeliveryIntel
          PackageDeliveryARM